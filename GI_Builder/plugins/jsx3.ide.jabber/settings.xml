<!--
  ~ Copyright (c) 2001-2014, TIBCO Software Inc.
  ~ Use, modification, and distribution subject to terms of license.
  -->
<serialization xmlns="urn:tibco.com/v3.0">
  <onAfterDeserialize><![CDATA[

objJSX.getFirstResponder = function() {
  return server;
};

objJSX.savePrefs = function() {
  var srvValue = server.getValue();
  var portValue = port.getValue();
  var bindValue = bind.getValue();
  var sslValue = useSSL.getValue();
  var idValue = userid.getValue();
  var pwValue = password.getValue();
  var remValue = remember.getValue();
  var autoValue = autologin.getValue();
  var s = jsx3.ide.getIDESettings();
  var id = this.getPlugIn().getId();

  var s = jsx3.ide.getIDESettings();
  var id = this.getPlugIn().getId();

  if (s.get(id, "server") != srvValue)
    s.set(id, "server", srvValue);
  if (s.get(id, "port") != portValue)
    s.set(id, "port", portValue);
  if (s.get(id, "bind") != bindValue)
    s.set(id, "bind", bindValue);
  if (s.get(id, "ssl") != sslValue)
    s.set(id, "ssl", sslValue);

  if (s.get(id, "remember") != remValue)
    s.set(id, "remember", remValue);
  if (s.get(id, "autologin") != autoValue)
    s.set(id, "autologin", autoValue);
  if (s.get(id, "userid") != idValue)
    s.set(id, "userid", idValue);

  s.set(id, "sounds", sounds.getValue());

  if (remValue) {
    this.getPlugIn().setTempPassword(null);
    if (s.get(id, "password") != pwValue)
      s.set(id, "password", pwValue);
  } else {
    this.getPlugIn().setTempPassword(pwValue);
    s.set(id, "password", "");
  }

  return true;
};

objJSX.loadPrefs = function() {
  var s = jsx3.ide.getIDESettings();
  var id = this.getPlugIn().getId();

  if (s.get(id)) {
    // the settings have been saved before
    server.setValue(s.get(id, "server"));
    port.setValue(s.get(id, "port"));
    bind.setValue(s.get(id, "bind"));
    useSSL.setValue(s.get(id, "ssl"));
    userid.setValue(s.get(id, "userid"));
    password.setValue(s.get(id, "password"));
    remember.setValue(s.get(id, "remember"));
    autologin.setValue(s.get(id, "autologin"));
    sounds.setValue(s.get(id, "sounds"));
  } else {
    server.setValue("chat.generalinterface.org");
    port.setValue("80");
    bind.setValue("http-bind");
    remember.setValue(1);
    autologin.setValue(1);
  }
};

objJSX.makeDirty = function(objInput) {
  this.getPane().setDirty(true);
};

  ]]></onAfterDeserialize>
  <object type="jsx3.gui.Block">
    <variants jsxoverflow="3" jsxrelativeposition="0" jsxleft="0" jsxtop="0"/>
    <strings jsxname="prefspane" jsxwidth="100%" jsxheight="100%" jsxpadding="8" jsxhelpid="ide.prefs.jabber"/>
      <object type="jsx3.gui.LayoutGrid">
        <variants jsxrelativeposition="1" jsxoverflow="2"/>
        <strings jsxcols="100,*" jsxrows="26,26,26,26,26,26,26,26,26"/>
        <object type="jsx3.gui.Block">
          <variants jsxoverflow="2"/>
          <strings jsxname="pane1" jsxwidth="100%" jsxheight="100%" jsxpadding="5 6 0 0" jsxtext="Jabber Server:" jsxtextalign="right" jsxfontweight="bold"/>
        </object>
        <object type="jsx3.gui.Block">
          <variants jsxoverflow="3"/>
          <strings jsxname="pane2" jsxwidth="100%" jsxheight="100%" jsxpadding="2 0 0 0"/>
          <object type="jsx3.gui.TextBox">
            <variants jsxheight="18"/>
            <strings jsxname="server" jsxmargin="0 4 0 0" jsxvalue="chat.generalinterface.org" jsxwidth="100%"/>
            <events jsxincchange="prefspane.makeDirty(this);"/>
          </object>
        </object>
        <object type="jsx3.gui.Block">
          <variants jsxoverflow="2"/>
          <strings jsxname="pane1" jsxwidth="100%" jsxheight="100%" jsxtext="Port:" jsxfontweight="bold" jsxtextalign="right" jsxpadding="5 6 0 0"/>
        </object>
        <object type="jsx3.gui.Block">
          <variants jsxoverflow="3"/>
          <strings jsxname="pane2" jsxwidth="100%" jsxheight="100%" jsxpadding="2 0 0 0"/>
          <object type="jsx3.gui.TextBox">
            <variants jsxheight="18" jsxwidth="150"/>
            <strings jsxname="port" jsxmargin="0 4 0 0" jsxvalue="80" jsxvalidationtype="number"/>
            <events jsxincchange="prefspane.makeDirty(this);"/>
          </object>
        </object>
        <object type="jsx3.gui.Block">
          <variants jsxoverflow="2"/>
          <strings jsxname="pane1" jsxwidth="100%" jsxheight="100%" jsxtextalign="right" jsxfontweight="bold" jsxpadding="5 6 0 0" jsxtext="Bind URL:"/>
        </object>
        <object type="jsx3.gui.Block">
          <variants jsxoverflow="3"/>
          <strings jsxname="pane2" jsxwidth="100%" jsxheight="100%" jsxpadding="2 0 0 0"/>
          <object type="jsx3.gui.TextBox">
            <variants jsxheight="18"/>
            <strings jsxname="bind" jsxmargin="0 4 0 0" jsxvalue="http-bind" jsxwidth="150"/>
            <events jsxincchange="prefspane.makeDirty(this);"/>
          </object>
        </object>
        <object type="jsx3.gui.Block"/>
        <object type="jsx3.gui.Block">
          <variants jsxoverflow="3"/>
          <strings jsxname="pane2" jsxwidth="100%" jsxheight="100%" jsxpadding="2 0 0 0"/>
          <object type="jsx3.gui.CheckBox">
            <variants jsxheight="18"/>
            <strings jsxname="useSSL" jsxtext="Use SSL" jsxmargin="0 4 0 0"/>
            <events jsxtoggle="prefspane.makeDirty(this);"/>
          </object>
        </object>
        <object type="jsx3.gui.Block">
          <variants jsxoverflow="2"/>
          <strings jsxname="pane1" jsxwidth="100%" jsxheight="100%" jsxtext="User ID:" jsxfontweight="bold" jsxpadding="5 6 0 0" jsxtextalign="right"/>
        </object>
        <object type="jsx3.gui.Block">
          <variants jsxoverflow="3"/>
          <strings jsxname="pane2" jsxwidth="100%" jsxheight="100%" jsxpadding="2 0 0 0"/>
          <object type="jsx3.gui.TextBox">
            <variants jsxheight="18"/>
            <strings jsxname="userid" jsxmargin="0 4 0 0" jsxvalue="" jsxwidth="150"/>
            <events jsxincchange="prefspane.makeDirty(this);"/>
          </object>
        </object>
        <object type="jsx3.gui.Block">
          <variants jsxoverflow="2"/>
          <strings jsxname="pane1" jsxwidth="100%" jsxheight="100%" jsxtext="Password:" jsxpadding="5 6 0 0" jsxfontweight="bold" jsxtextalign="right"/>
        </object>
        <object type="jsx3.gui.Block">
          <variants jsxoverflow="3"/>
          <strings jsxname="pane2" jsxwidth="100%" jsxheight="100%" jsxpadding="2 0 0 0"/>
          <object type="jsx3.gui.TextBox">
            <variants jsxtype="2" jsxheight="18"/>
            <strings jsxname="password" jsxmargin="0 4 0 0" jsxvalue="" jsxwidth="150"/>
            <events jsxincchange="prefspane.makeDirty(this);"/>
          </object>
        </object>
        <object type="jsx3.gui.Block"/>
        <object type="jsx3.gui.Block">
          <variants jsxoverflow="3"/>
          <strings jsxname="pane2" jsxwidth="100%" jsxheight="100%" jsxpadding="2 0 0 0"/>
          <object type="jsx3.gui.CheckBox">
            <variants jsxheight="18"/>
            <strings jsxname="remember" jsxtext="Remember password (password will be stored as plain text)" jsxmargin="0 4 0 0"/>
            <events jsxtoggle="prefspane.makeDirty(this);"/>
          </object>
        </object>
        <object type="jsx3.gui.Block"/>
        <object type="jsx3.gui.Block">
          <variants jsxoverflow="3"/>
          <strings jsxname="pane2" jsxwidth="100%" jsxheight="100%" jsxpadding="2 0 0 0"/>
          <object type="jsx3.gui.CheckBox">
            <variants jsxheight="18"/>
            <strings jsxname="autologin" jsxtext="Login automatically on start up" jsxmargin="0 4 0 0"/>
            <events jsxtoggle="prefspane.makeDirty(this);"/>
          </object>
        </object>
        <object type="jsx3.gui.Block"/>
        <object type="jsx3.gui.Block">
          <variants jsxoverflow="3"/>
          <strings jsxname="pane2" jsxwidth="100%" jsxheight="100%" jsxpadding="2 0 0 0"/>
          <object type="jsx3.gui.CheckBox">
            <variants jsxheight="18"/>
            <strings jsxname="sounds" jsxtext="Play sounds" jsxmargin="0 4 0 0"/>
            <events jsxtoggle="prefspane.makeDirty(this);"/>
          </object>
        </object>
    </object>
  </object>
</serialization>
